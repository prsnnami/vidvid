# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Deploy to Production server
        run: |
          mkdir ~/.ssh
          ssh-keyscan -H reduct-experiments.humanassisted.ai >> ~/.ssh/known_hosts
          eval $(ssh-agent -s)
          
          # Creating private ssh file
          cat > ~/.ssh/id_rsa << EOL
          ${{ secrets.EXPERIMENT_PRIVATE_KEY }}
          EOL
          
          chmod 600 ~/.ssh/id_rsa && chmod 600 ~/.ssh/known_hosts
          rsync -avz -e "ssh -i ~/.ssh/id_rsa" ./ punit@reduct-experiments.humanassisted.ai:/home/punit/reduct-experiments/
          ssh -i ~/.ssh/id_rsa punit@reduct-experiments.humanassisted.ai << EOL
          cd /home/punit/reduct-experiments/video-overlay
          
          # Adding env variables to .env
          cat > demo/.env << EOF
          SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}
          BASE_URL=${{ secrets.BASE_URL }}
          DB_NAME=borderer
          DB_USERNAME=postgres
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=127.0.0.1
          DB_PORT=5432
          EOF
          
          pip3 install -r requirements.txt
          pm2 kill
          python3 manage.py migrate
          pm2 start manage.py --interpreter python3 --name django -- runserver
          
          
          #build react app
          cd /home/punit/reduct-experiments/client
          cat > .env << EOF
          REACT_APP_GOOGLE_FONTS_API_KEY=${{ secrets.GOOGLE_FONTS_API_KEY }}
          EOF
          npm i
          npm run build
          chmod 600 /var/www/html
          cp -R build/* /var/www/html
          
          #run proxy
          cd /home/punit/reduct-experiments/proxy
          npm i
          pm2 start npm -- start


          EOL
